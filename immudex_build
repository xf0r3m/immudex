#!/bin/bash

set -e

#Under this condition i put three activities, which are taking
#place after updates in chroot environment.
if [ "$1" ] && [ "$1" = "--update" ]; then
  if [ "$2" ] && [ "$2" = "--amd64" ]; then arch="64";
  elif [ "$2" ] && [ "$2" = "--i386" ]; then arch="32";
  else help; exit 1;
  fi
  #Creating squasfs archive:
  sudo mksquasfs ~/immudex/${arch}/chroot ~/immudex/${arch}/staging/live/filesystem.squashfs -e boot;

  #Copying kernel and initrd (core files) from chroot:
  cp $(ls -v ~/immudex/${arch}/chroot/boot/vmlinuz-* | tail -1) ~/immudex/${arch}/staging/live/vmlinuz;
  cp $(ls -v ~/immudex/${arch}/chroot/boot/initrd-* | tail -1) ~/immudex/${arch}/staging/live/initrd;

 #Create iso image:
  cd ~/immudex/${arch};
  xorriso as mkisofs -iso-level 3 -o "immudex${arch}.iso" -full-iso9660-filenames -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -eltorito-boot isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table --eltorito-catalog isolinux/isolinux.cat -eltorito-alt-boot -e /boot/grub/efiboot.img -no-emul-boot -isohybrid-gpt-basdat -append_partition 2 0xef ~/immudex/${arch}/staging/boot/grub/efiboot.img ~/immudex/${arch}/staging;  
  exit 0;
fi

if [ ! -f /sbin/debootstrap ]; then
  #Creating enviroment:
  sudo apt install -y debootstrap squashfs-tools xorriso isolinux syslinux-efi grub-pc-bin grub-efi-amd64-bin mtools dosfstools;
fi

#Creating root directory sturcture for immudex build:
mkdir -p ~/immudex/{64,32} > /dev/null 2>&1;


#Determing requested architecture and
#fetching stable vanilla Debian base system files:
if [ "$1" ] && [ "$1" = "--amd64" ]; then arch="64";
elif [ "$1" ]; && [ "$1" = "--i386" ]; then arch="32";
else
  help;
  exit 1;
fi

/sbin/debootstrap --arch=$(echo $1 | sed 's/-//g') bullseye ~/immudex/${arch}/chroot http://ftp.icm.edu.pl/debian;

#Creating chroot script:
echo "#!/bin/bash" > immudex_chroot;
echo;

if [ "$arch" = "64" ]; then
  echo "apt install --no-install-recommends linux-image-amd64 live-boot systemd-sysv -y" >> immudex_chroot;
else
  echo "apt install --no-install-recommends linux-image-686-pae live-boot systemd-sysv -y" >> immudex_chroot;
fi

cat >> immudex_chroot <<EOF
apt install -y tzdata locales keyboard-configuration console-setup
dpkg-reconfigure tzdata;
dpkg-reconfigure locales;
dpkg-reconfigure keyboard-configuration;
dpkg-reconfiugre console-setup;
apt install -y task-desktop task-xfce-desktop";
apt install -y git vim firejail ufw cryptsetup lsof extlinux grub-efi-amd64 efibootmgr;
cd;
git clone https://github.com/xf0r3m/xfcedebian.git;
cd xfcedebian;
chmod +x install.sh;
bash install.sh;
cd;
git clone https://github.com/xf0r3m/immudex.git;
cd immudex;
tar -xzvf mozilla.tgz -C /etc/skel;
chown -R root:root /etc/skel/.mozilla;
cp tools/* /usr/local/bin;
chmod +x /usr/local/bin/*;
cp launchers/16608166085.desktop /etc/skel/.config/xfce4/panel/launcher-19/
ufw default deny incoming;
ufw default allow outgoing;
ufw enable;
useradd -m -s /bin/bash xf0r3m;
echo "xf0r3m:..." | chpasswd;
useradd -m -s /bin/bash user;
echo "user:user1" | chpasswd;
echo "xf0r3m ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers;
echo "user ALL=(ALL:ALL) NOPASSWD:ALL" >> /etc/sudoers;
echo "root:toor" | chpasswd;
usermod -aG libvirt,libvirt-qemu xf0r3m;
usermod -aG libvirt,libvirt-qemu user;
echo "immudex" > /etc/hostname;
echo "127.0.1.1    immudex" > /etc/hosts;
echo "deb http://ftp.icm.edu.pl/pub/Linux/debian/ bullseye main" > /etc/apt/sources.list;
echo "deb-src http://ftp.icm.edu.pl/pub/Linux/debian/ bullseye main" >> /etc/apt/sources.list;
echo "deb http://security.debian.org/debian-security bullseye-security main" >> /etc/apt/sources.list;
echo "deb-src http://security.debian.org/debian-security bullseye-security main" >> /etc/apt/sources.list;
echo "deb http://ftp.icm.edu.pl/pub/Linux/debian/ bullseye-updates main" >> /etc/apt/sources.list;
echo "deb-src http://ftp.icm.edu.pl/pub/Linux/debian/ bullseye-updates main" >> /etc/apt/sources.list;
apt update;
apt upgrade;
cd;
rm -rf immudex/
rm -rf xfcedebian/
apt-get clean
echo > ~/.bash_history
history -c
EOF
#Copying chroot script to chroot directory:
sudo cp immudex_chroot ~/immudex/${arch}/chroot;

#Executiong chroot script, at least i trying:
sudo chroot ~/immudex/${arch}/chroot /bin/bash /immudex_chroot;

#Creating LiveCD directory structure:
mkdir -p ~/immudex/${arch}/{staging/{EFI/boot,boot/grub/x86_64-efi,isolinux,live},tmp};

#Creating squasfs archive:
sudo mksquasfs ~/immudex/${arch}/chroot ~/immudex/${arch}/staging/live/filesystem.squashfs -e boot;

#Copying kernel and initrd (core files) from chroot:
cp $(ls -v ~/immudex/${arch}/chroot/boot/vmlinuz-* | tail -1) ~/immudex/${arch}/staging/live/vmlinuz;
cp $(ls -v ~/immudex/${arch}/chroot/boot/initrd-* | tail -1) ~/immudex/${arch}/staging/live/initrd;

#Getting and copying bootloader files
mkdir ~/Pobrane;
cd ~/Pobrane;
git clone https://github.com/xf0r3m/immudex.git;
if [ "$arch" = "64" ]; then arch2="amd64";
else arch2="i386"; fi 
cp immudex/isolinux/${arch2}/* ~/immudex/${arch}/staging/isolinux;
cp immudex/grub/${arch2}/* ~/immudex/${arch}/staging/boot/grub;

#Create grubstandalone config:
cat >> ~/immudex/${arch}/tmp/grub-standalone.cfg <<EOF
search --set=root --file /DEBIAN
set prefix=($root)/boot/grub
configfile /boot/grub/grub.cfg
EOF

#Create an empty file, which will be used to set root directory for GRUB:
touch ~/immudex/${arch}/staging/DEBIAN;

#Copying isolinux files:
cp /usr/lib/ISOLINUX/isolinux.bin ~/immudex/${arch}/staging/isolinux;
cp /usr/lib/syslinux/modules/bios/* ~/immudex/${arch}/staging/isolinux;

#Copying grub files:
cp -r /usr/lib/grub/x86_64-efi/* ~/immudex/${arch}/boot/grub/x86_64-efi;

#Creating grub-efi bootloader file:
myHOME=$(pwd);
grub-mkstandalone --format=x86_64-efi --output=${myHOME}/immudex/${arch}/staging/EFI/boot/bootx64.efi --locales="" --fonts="" "boot/grub/grub.cfg=${myHOME}/immudex/${arch}/tmp/grub-standalone.cfg";

#Creating additional EFI partition:
cd ~/immudex/staging/boot/grub;
dd if=/dev/zero bs=1M of=efiboot.img count=20;
sudo mkfs.vfat efiboot.img;
sudo mmd -i efiboot.img efi efi/boot;
sudo mcopy -vi efiboot.img ~/immudex/${arch}/staging/EFI/boot/bootx64.efi ::efi/boot;

#Create iso image:
cd ~/immudex/${arch};
xorriso as mkisofs -iso-level 3 -o "immudex${arch}.iso" -full-iso9660-filenames -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -eltorito-boot isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table --eltorito-catalog isolinux/isolinux.cat -eltorito-alt-boot -e /boot/grub/efiboot.img -no-emul-boot -isohybrid-gpt-basdat -append_partition 2 0xef ~/immudex/${arch}/staging/boot/grub/efiboot.img ~/immudex/${arch}/staging;
